# THIS FILE HAS BEEN GENERATED BY THE COMMAND `goreleaser:boilerplate`; DO NOT EDIT;
# See also: .github/workflows/release.yml

project_name: exporter-unifi-protect

release:
  github:
    owner: hoomy-official
    name: exporter-unifi-protect

# setups builds for linux and darwin on amd64 and arm64
# https://goreleaser.com/customization/build
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    main: ./cmd/exporter-unifi-protect
    # ensures mod timestamp to be the commit timestamp
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      # trims path
      - -trimpath
    ldflags:
      # use commit date instead of current date as main.date
      # only needed if you actually use those things in your main package, otherwise can be ignored.
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.buildSource={{ .GitURL }}

# proxies from the go mod proxy before building
# https://goreleaser.com/customization/gomod
gomod:
  proxy: false

# config the checksum filename
# https://goreleaser.com/customization/checksum
checksum:
  name_template: 'checksums.txt'

# create a source tarball
# https://goreleaser.com/customization/source/
source:
  enabled: true

# creates SBOMs of all archives and the source tarball using syft
# https://goreleaser.com/customization/sbom
sboms:
  - artifacts: archive
  - id: source # Two different sbom configurations need two different IDs
    artifacts: source

# signs the checksum file
# all files (including the sboms) are included in the checksum, so we don't need to sign each one if we don't want to
# https://goreleaser.com/customization/sign
signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - "--yes" # needed on cosign 2.0.0+
    artifacts: checksum
    output: true

# create a docker image
# https://goreleaser.com/customization/docker
dockers:
  - image_templates:
      - 'ghcr.io/hoomy-official/exporter-unifi-protect:{{ .Tag }}'
    dockerfile: Dockerfile
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.description=Exporter for UniFi Protect is a Prometheus exporter designed to help monitor your UniFi Protect setup by exporting relevant metrics to Prometheus."
      - "--label=org.opencontainers.image.source=https://github.com/hoomy-official/exporter-unifi-protect"

# signs our docker image
# https://goreleaser.com/customization/docker_sign
docker_signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    artifacts: images
    output: true
    args:
      - 'sign'
      - '${artifact}'
      - "--yes" # needed on cosign 2.0.0+
